// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using foodflyapi;

#nullable disable

namespace foodflyapi.Migrations
{
    [DbContext(typeof(Food2dataContext))]
    partial class Food2dataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("foodflyapi.Airline", b =>
                {
                    b.Property<int>("AirlineId")
                        .HasColumnType("int")
                        .HasColumnName("airline_id");

                    b.Property<string>("AirlineName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("airline_name");

                    b.HasKey("AirlineId")
                        .HasName("PK__airlines__A016BF8034358ED5");

                    b.ToTable("airlines", (string)null);
                });

            modelBuilder.Entity("foodflyapi.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .HasColumnType("int")
                        .HasColumnName("meal_id");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meal_name");

                    b.Property<int?>("PlaneId")
                        .HasColumnType("int")
                        .HasColumnName("plane_id");

                    b.Property<int>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("route_id");

                    b.HasKey("MealId")
                        .HasName("PK__meals__2910B00FC1EAA60C");

                    b.HasIndex("PlaneId");

                    b.HasIndex("RouteId");

                    b.ToTable("meals", (string)null);
                });

            modelBuilder.Entity("foodflyapi.Plane", b =>
                {
                    b.Property<int>("PlaneId")
                        .HasColumnType("int")
                        .HasColumnName("plane_id");

                    b.Property<string>("PlaneType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("plane_type");

                    b.HasKey("PlaneId")
                        .HasName("PK__planes__4D11D7FD33EB8961");

                    b.ToTable("planes", (string)null);
                });

            modelBuilder.Entity("foodflyapi.Review", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("date")
                        .HasColumnName("flight_date");

                    b.Property<int>("MealId")
                        .HasColumnType("int")
                        .HasColumnName("meal_id");

                    b.Property<int>("OverallFeeling")
                        .HasColumnType("int")
                        .HasColumnName("overall_feeling");

                    b.Property<string>("Photos")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photos");

                    b.Property<int?>("PortionSize")
                        .HasColumnType("int")
                        .HasColumnName("portion_size");

                    b.Property<string>("ServedAt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("served_at");

                    b.Property<int>("Taste")
                        .HasColumnType("int")
                        .HasColumnName("taste");

                    b.Property<int>("Texture")
                        .HasColumnType("int")
                        .HasColumnName("texture");

                    b.HasKey("Id")
                        .HasName("PK__reviews__3213E83FF7D615F1");

                    b.HasIndex("MealId");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("foodflyapi.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("route_id");

                    b.Property<int?>("AirlineId")
                        .HasColumnType("int")
                        .HasColumnName("airline_id");

                    b.Property<string>("DepartureAirport")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("departure_airport");

                    b.Property<string>("DestinationAirport")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("destination_airport");

                    b.HasKey("RouteId")
                        .HasName("PK__routes__28F706FEB236937F");

                    b.HasIndex("AirlineId");

                    b.ToTable("routes", (string)null);
                });

            modelBuilder.Entity("foodflyapi.Meal", b =>
                {
                    b.HasOne("foodflyapi.Plane", "Plane")
                        .WithMany("Meals")
                        .HasForeignKey("PlaneId")
                        .HasConstraintName("FK__meals__plane_id__66603565");

                    b.HasOne("foodflyapi.Route", "Route")
                        .WithMany("Meals")
                        .HasForeignKey("RouteId")
                        .IsRequired()
                        .HasConstraintName("FK__meals__route_id__656C112C");

                    b.Navigation("Plane");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("foodflyapi.Review", b =>
                {
                    b.HasOne("foodflyapi.Meal", "Meal")
                        .WithMany("Reviews")
                        .HasForeignKey("MealId")
                        .IsRequired()
                        .HasConstraintName("FK__reviews__meal_id__693CA210");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("foodflyapi.Route", b =>
                {
                    b.HasOne("foodflyapi.Airline", "Airline")
                        .WithMany("Routes")
                        .HasForeignKey("AirlineId")
                        .HasConstraintName("FK__routes__airline___60A75C0F");

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("foodflyapi.Airline", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("foodflyapi.Meal", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("foodflyapi.Plane", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("foodflyapi.Route", b =>
                {
                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
